# # Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# # By starting with 1 and 2, the first 10 terms will be:
# #
# #
# # By considering the terms in the Fibonacci sequence
# # whose values do not exceed four million,
# # find the sum of the even-valued terms.
# #
# #
# # 10DIME
# #
# #
# # Input:
# # integer n = upper limit (4 * 10**6)
# #
# # Output:
# # - sum of all even integers of Fibonacci sequence under n
# #
# # Define:
#
# def fibonacci(n)
#   n < 2 ? n : fibonacci(n-1) + fibonacci(n-2)
# end
# #
# #
# # Data Structures:
# array for even-valued terms
# integer as sum result
# #
# # Illustrate:
# I need to write the fib method to find all terms up to 4*10**6
# then collect and sum all the even terms
#
# # Methods:
#
# # Edge Cases/Exceptions:
# do i include 4*6**10? I think so.

#
# this method is too slow:
def fibonacci(n)
  n < 2 ? n : fibonacci(n-1) + fibonacci(n-2)
end

arr = []
for i in 1..1000
  if fibonacci(i).even?
    arr << fibonacci(i)
  end
end
puts sum = arr.sum
